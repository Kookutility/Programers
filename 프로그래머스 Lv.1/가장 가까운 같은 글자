def solution(s):
    alpha_last_idx = {alpha:-1 for alpha in "abcdefghijklnmopqrstuvwxyz"}  # 알파벳 소문자들과 마지막 등장 인덱스를 저장하는 딕셔너리
    answer = []  # 결과 리스트
    
    for idx, char in enumerate(s):  # 문자열 s를 왼쪽부터 순회하면서 다음 작업 수행
        if alpha_last_idx[char] == -1:  # 현재 글자가 처음 등장한 경우
            answer.append(-1)  # 결과 리스트에 -1 추가 (처음 등장한 경우는 가까운 같은 글자가 없으므로 -1로 표시)
            alpha_last_idx[char] = idx  # 현재 글자의 마지막 등장 인덱스를 업데이트
        else:  # 이미 등장한 글자인 경우
            answer.append(idx - alpha_last_idx[char])  # 현재 위치와 이전에 나타난 위치 사이의 거리를 계산하여 결과 리스트에 추가
            alpha_last_idx[char] = idx  # 현재 글자의 마지막 등장 인덱스를 업데이트
            
    return answer  # 최종적으로 구성된 결과 리스트 반환
